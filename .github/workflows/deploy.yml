name: Deploy API

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'src/**'
      - 'Dockerfile'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          CUDA_VERSION=12.1.0

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service: mistral-ner-api
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
        region: us-central1
        env_vars: |
          MODEL_PATH=/models/mistral-ner-finetuned-final
          MAX_LENGTH=256
          BATCH_SIZE=32
        flags: |
          --memory=16Gi
          --cpu=4
          --gpu=1
          --gpu-type=nvidia-tesla-t4
          --max-instances=3
          --min-instances=0
    
    - name: Show API URL
      run: echo "API deployed to ${{ steps.deploy.outputs.url }}"
