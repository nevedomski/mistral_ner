name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  validation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Cache MyPy
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('src/**/*.py') }}
          restore-keys: |
            mypy-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}-
            mypy-${{ runner.os }}-

      - name: Install dependencies
        run: |
          echo "Creating virtual environment..."
          uv venv
          echo "Installing package with all dependencies..."
          uv pip install -e ".[api]"
          uv pip install -e ".[cuda12]"
          uv pip install -e ".[dev]"
          echo "Installation complete"

      - name: Verify tools are available
        run: |
          echo "Checking installed tools..."
          uv run ruff --version
          uv run mypy --version
          uv run pytest --version

      - name: Run comprehensive validation
        run: |
          echo "Running validation script..."
          uv run scripts/validate.py --verbose

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false

      - name: Upload validation reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-reports-${{ matrix.python-version }}
          path: |
            coverage.json
            coverage.xml
            validation_reports/
            htmlcov/
          retention-days: 30

  # Individual check jobs for debugging purposes
  lint-only:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[api]"
          uv pip install -e ".[cuda12]"
          uv pip install -e ".[dev]"
      - name: Run lint checks only
        run: |
          uv run scripts/validate.py --ruff-only
          uv run scripts/validate.py --mypy-only

  test-only:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[api]"
          uv pip install -e ".[cuda12]"
          uv pip install -e ".[dev]"
      - name: Run tests only
        run: |
          uv run scripts/validate.py --tests-only

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Build package
        run: |
          uv build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: mistral-ner:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
