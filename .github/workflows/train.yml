name: Train Model

on:
  workflow_dispatch:
    inputs:
      epochs:
        description: 'Number of training epochs'
        required: false
        default: '3'
        type: string
      batch_size:
        description: 'Batch size per device'
        required: false
        default: '4'
        type: string
      learning_rate:
        description: 'Learning rate'
        required: false
        default: '2e-4'
        type: string
      wandb_project:
        description: 'Weights & Biases project name'
        required: false
        default: 'mistral-ner'
        type: string

env:
  PYTHONUNBUFFERED: "1"
  CUDA_VISIBLE_DEVICES: "0"

jobs:
  train:
    runs-on: [self-hosted, gpu]  # Requires self-hosted runner with GPU
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    
    - name: Install dependencies with CUDA
      run: |
        uv pip install -e ".[cuda12]"
    
    - name: Set up Weights & Biases
      env:
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
      run: |
        wandb login
    
    - name: Train model
      env:
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        WANDB_PROJECT: ${{ github.event.inputs.wandb_project }}
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        python scripts/train.py \
          --num_train_epochs ${{ github.event.inputs.epochs }} \
          --per_device_train_batch_size ${{ github.event.inputs.batch_size }} \
          --learning_rate ${{ github.event.inputs.learning_rate }}
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-checkpoint
        path: |
          ./mistral-ner-finetuned-final/
          ./logs/
        retention-days: 7
    
    - name: Push to Hugging Face Hub (optional)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        python -c "
        from transformers import AutoModelForTokenClassification, AutoTokenizer
        model = AutoModelForTokenClassification.from_pretrained('./mistral-ner-finetuned-final')
        tokenizer = AutoTokenizer.from_pretrained('./mistral-ner-finetuned-final')
        model.push_to_hub('${{ github.repository_owner }}/mistral-ner-conll2003')
        tokenizer.push_to_hub('${{ github.repository_owner }}/mistral-ner-conll2003')
        "